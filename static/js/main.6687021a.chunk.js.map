{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImafeGAllery.module.css","components/ImagegalleryItem/ImageGalleryitem.module.css","components/Button/Button.module.css","components/SearchBar/SearchBar.js","servicesApi/Images-api.js","components/ImagegalleryItem/ImageGAlleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/LoaderButton/LoaderButton.js","components/Button/Button.js","App.js","index.js","components/SearchBar/SearchBar.module.css"],"names":["module","exports","Searchbar","state","imgGallery","searchQuery","handleChange","event","setState","currentTarget","value","console","log","loadGallery","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormbutton","SearchFormbuttonlabel","SearchForminput","autoComplete","autoFocus","placeholder","onChange","Component","currentPage","axios","get","then","data","hits","ImageGalleryItem","url","alt","onClick","src","ImageGalleryItemimage","ImageGallery","img","map","id","webformatURL","largeImageURL","tags","modalRoot","document","querySelector","Modal","handleCloseModal","code","target","onClose","window","addEventListener","removeEventListener","createPortal","ModalBackdrop","SpinnerPage","grow","Button","App","showModal","bigImg","bigImgTags","isLoading","error","toggleModal","onChangeQuery","query","fetchImg","options","API","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","onImgClick","imgTags","_prevProps","shouldRenderLoadMoreButton","length","SearchBar","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6687021a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2WBTT\",\"ModalBackdrop\":\"Modal_ModalBackdrop__3Mdxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImafeGAllery_ImageGallery__14Jp6\",\"ImageGalleryItem\":\"ImafeGAllery_ImageGalleryItem__Hy1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemimage\":\"ImageGalleryitem_ImageGalleryItemimage__18Mtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\n\nclass Searchbar extends Component {\n    state = {\n        imgGallery: [],\n        searchQuery: '',\n    };\n\n    handleChange = event => {\n        this.setState({ searchQuery: event.currentTarget.value });\n        console.log('imageName after changing input: ', {\n            searchQuery: event.currentTarget.value,\n        });\n    };\n\n    loadGallery = event => {\n        event.preventDefault(); //чтобы не перегружать страницу при Сабмите формы\n\n        this.props.onSubmit(this.state.searchQuery); //\n\n        this.setState({ searchQuery: '' }); //обновляем строку приновом запросе\n    };\n\n    render() {\n        return (\n            <header className={styles.Searchbar}>\n                <form className={styles.SearchForm} onSubmit={this.loadGallery}>\n                    <button type=\"submit\" className={styles.SearchFormbutton}>\n                        <span className={styles.SearchFormbuttonlabel}>\n                            Search\n                        </span>\n                    </button>\n\n                    <input\n                        className={styles.SearchForminput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.searchQuery}\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\n// import API_KEY from './ApiKey';\nconst API_KEY = '20764916-f72ac860731c159c811384133';\nconst BASE_URL = 'https://pixabay.com/api/?';\n\nconst fetchImg = ({ searchQuery = '', currentPage = 1 }) => {\n    return axios\n        .get(\n            `${BASE_URL}=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n        )\n        .then(({ data }) => data.hits);\n};\nexport default { fetchImg };\n","import PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryitem.module.css';\n\nconst ImageGalleryItem = ({ url, alt, onClick }) => {\n    return (\n        <>\n            {/* <li className={styles.ImageGalleryItem}> */}\n            <img\n                src={url}\n                alt={alt}\n                className={styles.ImageGalleryItemimage}\n                onClick={onClick}\n            />\n            {/* </li> */}\n        </>\n    );\n};\n\nImageGalleryItem.propTypes = {\n    url: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport styles from './ImafeGAllery.module.css';\n\nimport ImageGalleryItem from '../ImagegalleryItem/ImageGAlleryItem';\n\nconst ImageGallery = ({ img, onClick }) => {\n    return (\n        <ul className={styles.ImageGallery}>\n            {img.map(({ id, webformatURL, largeImageURL, tags }) => (\n                <li key={id}>\n                    <ImageGalleryItem\n                        url={webformatURL}\n                        alt={tags}\n                        onClick={() => onClick(largeImageURL, tags)}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nImageGallery.propTypes = {\n    img: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ),\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleCloseModal);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleCloseModal);\n        window.removeEventListener('click', this.handleCloseModal);\n    }\n\n    handleCloseModal = event => {\n        if (event.code === 'Escape' || event.currentTarget === event.target) {\n            this.props.onClose();\n        }\n    };\n    render() {\n        const { url, alt } = this.props;\n\n        return createPortal(\n            <div\n                className={styles.ModalBackdrop}\n                onClick={this.handleCloseModal}\n            >\n                <div className={styles.Modal}>\n                    <img src={url} alt={alt} />\n                </div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nModal.propTypes = {\n    url: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { MDBSpinner } from 'mdb-react-ui-kit';\n\nconst SpinnerPage = () => {\n    return (\n        <MDBSpinner grow>\n            <span className=\"visually-hidden\">Loading...</span>\n        </MDBSpinner>\n    );\n};\n\nexport default SpinnerPage;\n","import styles from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n    return (\n        <button type=\"button\" className={styles.Button} onClick={onClick}>\n            Загрузить еще...\n        </button>\n    );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport API from './servicesApi/Images-api';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport SpinnerPage from './components/LoaderButton/LoaderButton';\nimport Button from './components/Button/Button';\n\nclass App extends Component {\n    state = {\n        url: '',\n        alt: '',\n        showModal: false,\n        imgGallery: [],\n        searchQuery: '',\n        currentPage: 1,\n        bigImg: '',\n        bigImgTags: '',\n\n        isLoading: false,\n        error: null,\n    };\n    componentDidUpdate(_prevProps, prevState) {\n        // const { query } = this.state;\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            console.log('fetching images...');\n            this.fetchImg();\n        }\n    }\n    toggleModal = () => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n        }));\n    };\n    onChangeQuery = query => {\n        this.setState({\n            searchQuery: query,\n            currentPage: 1,\n            imgGallery: [],\n            error: null,\n        });\n        console.log('query after changing input: ', {\n            query,\n        });\n    };\n\n    fetchImg = () => {\n        const { currentPage, searchQuery } = this.state;\n        const options = { searchQuery, currentPage };\n        this.setState({ isLoading: true });\n        API.fetchImg(options)\n            .then(imgGallery => {\n                this.setState(prevState => ({\n                    imgGallery: [...prevState.imgGallery, ...imgGallery],\n                    currentPage: prevState.currentPage + 1,\n                }));\n            })\n            .catch(error => this.setState({ error }))\n            .finally(() => {\n                if (this.state.currentPage > 2) {\n                    window.scrollTo({\n                        top: document.documentElement.scrollHeight,\n                        behavior: 'smooth',\n                    });\n                }\n                return this.setState({ isLoading: false });\n            });\n    };\n    onImgClick = (img, imgTags) => {\n        this.setState({ bigImg: img, bigImgTags: imgTags, showModal: true });\n    };\n    render() {\n        const { imgGallery, isLoading, error, showModal, bigImg, bigImgTags } =\n            this.state;\n        const shouldRenderLoadMoreButton = imgGallery.length > 0 && !isLoading;\n\n        return (\n            <div>\n                {showModal && (\n                    <Modal\n                        onClose={this.toggleModal}\n                        url={bigImg}\n                        alt={bigImgTags}\n                    />\n                )}\n                {error && <h1>Ой ошибка, всё пропало!!!</h1>}\n\n                <SearchBar onSubmit={this.onChangeQuery} />\n\n                {\n                    <ImageGallery\n                        img={imgGallery}\n                        title={this.onChangeQuery}\n                        onClick={this.onImgClick}\n                    />\n                }\n                {isLoading && <SpinnerPage />}\n\n                {shouldRenderLoadMoreButton && (\n                    <Button onClick={this.fetchImg} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\n// import './styles.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__19WMJ\",\"SearchForm\":\"SearchBar_SearchForm__1k1JW\",\"SearchFormbutton\":\"SearchBar_SearchFormbutton__1LccH\",\"SearchFormbuttonlabel\":\"SearchBar_SearchFormbuttonlabel__2vAiG\",\"SearchForminput\":\"SearchBar_SearchForminput__2rUnq\"};"],"sourceRoot":""}